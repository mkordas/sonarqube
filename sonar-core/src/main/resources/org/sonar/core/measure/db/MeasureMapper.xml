<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.core.measure.db.MeasureMapper">

  <sql id="measureColumns">
    pm.id,
    pm.snapshot_id as snapshotId,
    pm.value as value,
    pm.text_value as textValue,
    pm.measure_data as data,
    pm.variation_value_1 as variation1,
    pm.variation_value_2 as variation2,
    pm.variation_value_3 as variation3,
    pm.variation_value_4 as variation4,
    pm.variation_value_5 as variation5,
    p.kee as componentKey,
    metric.name as metricKey
  </sql>

  <select id="selectByKey" parameterType="map" resultType="Measure">
    SELECT
    <include refid="measureColumns"/>
    FROM project_measures pm
    INNER JOIN snapshots s ON s.id=pm.snapshot_id AND s.islast=${_true}
    INNER JOIN metrics metric ON metric.id=pm.metric_id
    INNER JOIN projects p ON p.id=s.project_id AND p.enabled=${_true}
    <where>
      AND p.kee = #{key.componentKey}
      AND metric.name = #{key.metricKey}
      AND pm.rule_id IS NULL
      AND pm.characteristic_id IS NULL
      AND pm.person_id IS NULL
    </where>
  </select>

  <select id="selectByComponentAndMetrics" parameterType="map" resultType="Measure">
    SELECT metric.name as metric_name,
    <include refid="measureColumns"/>
    FROM project_measures pm
    INNER JOIN snapshots s ON s.id=pm.snapshot_id AND s.islast=${_true}
    INNER JOIN projects p ON p.id=s.project_id AND p.enabled=${_true}
    INNER JOIN metrics metric ON metric.id=pm.metric_id
    <where>
      AND p.kee = #{componentKey}
      AND
      <foreach item="metricKey" index="index" collection="metricKeys" open="(" separator=" or " close=")">
        metric.name=#{metricKey}
      </foreach>
      AND pm.rule_id IS NULL
      AND pm.characteristic_id IS NULL
      AND pm.person_id IS NULL
    </where>
  </select>

  <select id="selectByComponentAndMetric" parameterType="map" resultType="Measure">
    SELECT metric.name as metric_name,
    <include refid="measureColumns"/>
    FROM project_measures pm
    INNER JOIN snapshots s ON s.id=pm.snapshot_id AND s.islast=${_true}
    INNER JOIN projects p ON p.id=s.project_id AND p.enabled=${_true}
    INNER JOIN metrics metric ON metric.id=pm.metric_id
    <where>
      AND p.kee = #{componentKey}
      AND metric.name=#{metricKey}
      AND pm.rule_id IS NULL
      AND pm.characteristic_id IS NULL
      AND pm.person_id IS NULL
    </where>
  </select>

  <select id="countByKey" parameterType="map" resultType="long">
    SELECT count(pm.id)
    FROM project_measures pm
    INNER JOIN snapshots s ON s.id=pm.snapshot_id AND s.islast=${_true}
    INNER JOIN metrics metric ON metric.id=pm.metric_id
    INNER JOIN projects p ON p.id=s.project_id AND p.enabled=${_true}
    <where>
      AND p.kee = #{key.componentKey}
      AND metric.name = #{key.metricKey}
      AND pm.rule_id IS NULL
      AND pm.characteristic_id IS NULL
      AND pm.person_id IS NULL
    </where>
  </select>

  <insert id="insert" parameterType="Measure" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    INSERT INTO project_measures (
    value, metric_id, snapshot_id, rule_id, text_value, tendency, measure_date,
    project_id, alert_status, alert_text, url, description, rule_priority, characteristic_id, variation_value_1,
    variation_value_2, variation_value_3, variation_value_4, variation_value_5, person_id, measure_data)
    VALUES (
    #{value, jdbcType=DOUBLE}, #{metricId, jdbcType=INTEGER}, #{snapshotId, jdbcType=INTEGER},
    #{ruleId, jdbcType=INTEGER}, #{textValue, jdbcType=VARCHAR}, #{tendency, jdbcType=INTEGER},
    #{measureDateMs, jdbcType=BIGINT}, #{projectId, jdbcType=INTEGER}, #{alertStatus, jdbcType=VARCHAR},
    #{alertText, jdbcType=VARCHAR}, #{url, jdbcType=VARCHAR}, #{description, jdbcType=VARCHAR},
    #{severityIndex, jdbcType=INTEGER}, #{characteristicId, jdbcType=INTEGER}, #{variation1, jdbcType=DOUBLE},
    #{variation2, jdbcType=DOUBLE}, #{variation3, jdbcType=DOUBLE}, #{variation4, jdbcType=DOUBLE},
    #{variation5, jdbcType=DOUBLE}, #{personId, jdbcType=INTEGER}, #{measureData, jdbcType=BINARY}
    )
  </insert>

</mapper>
